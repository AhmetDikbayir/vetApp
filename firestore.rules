rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - kullanıcılar sadece kendi verilerini okuyabilir/yazabilir
    match /users/{userId} {
      // Okuma izni: Döküman ID'si giriş yapan kullanıcı UID'si ile aynı olmalı
      // FCM token için özel izin: Veterinerlerin FCM token'larına erişim
      allow read: if request.auth != null && 
        (request.auth.uid == userId || 
         (resource.data.role == 'veteriner' && 
          request.query.limit <= 1 && 
          request.query.offset == 0));
      
      // Güncelleme izni: Döküman ID'si giriş yapan kullanıcı UID'si ile aynı olmalı
      // FCM token güncellemesi için de izin ver
      allow update: if request.auth != null && request.auth.uid == userId;
      
      // Silme izni: Döküman ID'si giriş yapan kullanıcı UID'si ile aynı olmalı
      allow delete: if request.auth != null && request.auth.uid == userId;
      
      // Create izni: Yeni belge oluşturulurken döküman ID'si giriş yapan kullanıcı UID'si ile aynı olmalı
      // Ayrıca id alanı da aynı olmalı
      allow create: if request.auth != null && 
                   request.auth.uid == userId && 
                   request.auth.uid == request.resource.data.id;
    }
    
    // Pets collection - kullanıcılar sadece kendi evcil hayvanlarını okuyabilir/yazabilir
    match /pets/{petId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Clinics collection - herkes okuyabilir, sadece admin yazabilir
    match /clinics/{clinicId} {
      allow read: if true; // Herkes okuyabilir (giriş yapmış olması gerekmez)
      allow write: if false; // Sadece admin panelinden yazılabilir
    }
    
    // Veterinarians collection - herkes okuyabilir, giriş yapmış kullanıcılar yazabilir
    match /veterinarians/{veterinarianId} {
      allow read: if true; // Herkes okuyabilir (giriş yapmış olması gerekmez)
      allow write: if request.auth != null; // Giriş yapmış kullanıcılar yazabilir
    }
    
    // Appointments collection - randevu sahibi ve veteriner güncelleyebilir
    match /appointments/{appointmentId} {
      // Okuma: Randevu sahibi okuyabilir, veteriner de okuyabilir
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         resource.data.veterinarianId != null);
      
      // Güncelleme: Randevu sahibi ve veteriner güncelleyebilir
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         resource.data.veterinarianId != null);
      
      // Silme: Sadece randevu sahibi silebilir
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Oluşturma: Giriş yapmış kullanıcılar oluşturabilir
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // FCM Tokens collection - herkes okuyabilir (bildirim göndermek için)
    match /fcmTokens/{tokenId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == tokenId;
    }
    
    // OneSignal Players collection - kullanıcılar kendi Player ID'lerini yazabilir, herkes okuyabilir
    match /oneSignalPlayers/{userId} {
      allow read: if request.auth != null; // Giriş yapmış kullanıcılar okuyabilir (bildirim göndermek için)
      allow write: if request.auth != null && request.auth.uid == userId; // Kullanıcı sadece kendi Player ID'sini yazabilir
    }
    
    // Appointments collection için list izni - müsaitlik kontrolü için
    match /appointments/{appointmentId} {
      allow list: if request.auth != null;
    }
    
    // Diğer collection'lar için varsayılan kurallar
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
